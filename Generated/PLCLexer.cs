//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/Å½igy-san/Downloads/pjp-main (2)/pjp-main/PLC.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class PLCLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, BOOL=30, IDENT=31, INT=32, 
		FLOAT=33, STRING=34, LINE_COMMENT=35, WS=36;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "BOOL", "IDENT", "INT", "FLOAT", "STRING", 
		"LINE_COMMENT", "WS"
	};


	public PLCLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public PLCLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'read'", "'write'", "'{'", "'}'", "'if'", "'('", "')'", 
		"'else'", "'while'", "'int'", "'float'", "'bool'", "'string'", "','", 
		"'='", "'||'", "'&&'", "'=='", "'!='", "'<'", "'>'", "'+'", "'-'", "'.'", 
		"'*'", "'/'", "'%'", "'!'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, "BOOL", "IDENT", "INT", "FLOAT", "STRING", 
		"LINE_COMMENT", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PLC.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static PLCLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,36,225,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,
		4,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,
		1,9,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,
		12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,
		16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,21,1,
		21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,
		28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,3,29,174,8,29,1,30,1,30,
		5,30,178,8,30,10,30,12,30,181,9,30,1,31,4,31,184,8,31,11,31,12,31,185,
		1,32,4,32,189,8,32,11,32,12,32,190,1,32,1,32,4,32,195,8,32,11,32,12,32,
		196,1,33,1,33,5,33,201,8,33,10,33,12,33,204,9,33,1,33,1,33,1,34,1,34,1,
		34,1,34,5,34,212,8,34,10,34,12,34,215,9,34,1,34,1,34,1,35,4,35,220,8,35,
		11,35,12,35,221,1,35,1,35,0,0,36,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
		9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,
		21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,
		33,67,34,69,35,71,36,1,0,6,2,0,65,90,97,122,3,0,48,57,65,90,97,122,1,0,
		48,57,3,0,10,10,13,13,34,34,2,0,10,10,13,13,3,0,9,10,13,13,32,32,232,0,
		1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
		0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
		1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
		0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
		1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,
		0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
		1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,1,73,1,0,0,0,3,75,1,0,0,0,5,80,1,0,0,
		0,7,86,1,0,0,0,9,88,1,0,0,0,11,90,1,0,0,0,13,93,1,0,0,0,15,95,1,0,0,0,
		17,97,1,0,0,0,19,102,1,0,0,0,21,108,1,0,0,0,23,112,1,0,0,0,25,118,1,0,
		0,0,27,123,1,0,0,0,29,130,1,0,0,0,31,132,1,0,0,0,33,134,1,0,0,0,35,137,
		1,0,0,0,37,140,1,0,0,0,39,143,1,0,0,0,41,146,1,0,0,0,43,148,1,0,0,0,45,
		150,1,0,0,0,47,152,1,0,0,0,49,154,1,0,0,0,51,156,1,0,0,0,53,158,1,0,0,
		0,55,160,1,0,0,0,57,162,1,0,0,0,59,173,1,0,0,0,61,175,1,0,0,0,63,183,1,
		0,0,0,65,188,1,0,0,0,67,198,1,0,0,0,69,207,1,0,0,0,71,219,1,0,0,0,73,74,
		5,59,0,0,74,2,1,0,0,0,75,76,5,114,0,0,76,77,5,101,0,0,77,78,5,97,0,0,78,
		79,5,100,0,0,79,4,1,0,0,0,80,81,5,119,0,0,81,82,5,114,0,0,82,83,5,105,
		0,0,83,84,5,116,0,0,84,85,5,101,0,0,85,6,1,0,0,0,86,87,5,123,0,0,87,8,
		1,0,0,0,88,89,5,125,0,0,89,10,1,0,0,0,90,91,5,105,0,0,91,92,5,102,0,0,
		92,12,1,0,0,0,93,94,5,40,0,0,94,14,1,0,0,0,95,96,5,41,0,0,96,16,1,0,0,
		0,97,98,5,101,0,0,98,99,5,108,0,0,99,100,5,115,0,0,100,101,5,101,0,0,101,
		18,1,0,0,0,102,103,5,119,0,0,103,104,5,104,0,0,104,105,5,105,0,0,105,106,
		5,108,0,0,106,107,5,101,0,0,107,20,1,0,0,0,108,109,5,105,0,0,109,110,5,
		110,0,0,110,111,5,116,0,0,111,22,1,0,0,0,112,113,5,102,0,0,113,114,5,108,
		0,0,114,115,5,111,0,0,115,116,5,97,0,0,116,117,5,116,0,0,117,24,1,0,0,
		0,118,119,5,98,0,0,119,120,5,111,0,0,120,121,5,111,0,0,121,122,5,108,0,
		0,122,26,1,0,0,0,123,124,5,115,0,0,124,125,5,116,0,0,125,126,5,114,0,0,
		126,127,5,105,0,0,127,128,5,110,0,0,128,129,5,103,0,0,129,28,1,0,0,0,130,
		131,5,44,0,0,131,30,1,0,0,0,132,133,5,61,0,0,133,32,1,0,0,0,134,135,5,
		124,0,0,135,136,5,124,0,0,136,34,1,0,0,0,137,138,5,38,0,0,138,139,5,38,
		0,0,139,36,1,0,0,0,140,141,5,61,0,0,141,142,5,61,0,0,142,38,1,0,0,0,143,
		144,5,33,0,0,144,145,5,61,0,0,145,40,1,0,0,0,146,147,5,60,0,0,147,42,1,
		0,0,0,148,149,5,62,0,0,149,44,1,0,0,0,150,151,5,43,0,0,151,46,1,0,0,0,
		152,153,5,45,0,0,153,48,1,0,0,0,154,155,5,46,0,0,155,50,1,0,0,0,156,157,
		5,42,0,0,157,52,1,0,0,0,158,159,5,47,0,0,159,54,1,0,0,0,160,161,5,37,0,
		0,161,56,1,0,0,0,162,163,5,33,0,0,163,58,1,0,0,0,164,165,5,116,0,0,165,
		166,5,114,0,0,166,167,5,117,0,0,167,174,5,101,0,0,168,169,5,102,0,0,169,
		170,5,97,0,0,170,171,5,108,0,0,171,172,5,115,0,0,172,174,5,101,0,0,173,
		164,1,0,0,0,173,168,1,0,0,0,174,60,1,0,0,0,175,179,7,0,0,0,176,178,7,1,
		0,0,177,176,1,0,0,0,178,181,1,0,0,0,179,177,1,0,0,0,179,180,1,0,0,0,180,
		62,1,0,0,0,181,179,1,0,0,0,182,184,7,2,0,0,183,182,1,0,0,0,184,185,1,0,
		0,0,185,183,1,0,0,0,185,186,1,0,0,0,186,64,1,0,0,0,187,189,7,2,0,0,188,
		187,1,0,0,0,189,190,1,0,0,0,190,188,1,0,0,0,190,191,1,0,0,0,191,192,1,
		0,0,0,192,194,5,46,0,0,193,195,7,2,0,0,194,193,1,0,0,0,195,196,1,0,0,0,
		196,194,1,0,0,0,196,197,1,0,0,0,197,66,1,0,0,0,198,202,5,34,0,0,199,201,
		8,3,0,0,200,199,1,0,0,0,201,204,1,0,0,0,202,200,1,0,0,0,202,203,1,0,0,
		0,203,205,1,0,0,0,204,202,1,0,0,0,205,206,5,34,0,0,206,68,1,0,0,0,207,
		208,5,47,0,0,208,209,5,47,0,0,209,213,1,0,0,0,210,212,8,4,0,0,211,210,
		1,0,0,0,212,215,1,0,0,0,213,211,1,0,0,0,213,214,1,0,0,0,214,216,1,0,0,
		0,215,213,1,0,0,0,216,217,6,34,0,0,217,70,1,0,0,0,218,220,7,5,0,0,219,
		218,1,0,0,0,220,221,1,0,0,0,221,219,1,0,0,0,221,222,1,0,0,0,222,223,1,
		0,0,0,223,224,6,35,0,0,224,72,1,0,0,0,9,0,173,179,185,190,196,202,213,
		221,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
